import{_ as u,X as r,Y as k,$ as n,a2 as s,a0 as a,a1 as t,E as o}from"./framework-71fc1c0e.js";const d={},m=n("h2",{id:"题目链接",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#题目链接","aria-hidden":"true"},"#"),s(" 题目链接")],-1),b={href:"https://leetcode.cn/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof/",target:"_blank",rel:"noopener noreferrer"},v=n("h2",{id:"题目描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#题目描述","aria-hidden":"true"},"#"),s(" 题目描述")],-1),h=n("p",null,"输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。",-1),_=n("h2",{id:"题目思路",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#题目思路","aria-hidden":"true"},"#"),s(" 题目思路")],-1),y=n("p",null,"题目要求返回一个数组，所以可以将数组反转",-1),f=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[s("    "),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"reversePrint"),n("span",{class:"token punctuation"},"("),s("head"),n("span",{class:"token operator"},":"),s(" ListNode "),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// 因为返回结果为数组，直接reverse"),s(`
    `),n("span",{class:"token keyword"},"let"),s(" res"),n("span",{class:"token operator"},":"),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(`
    `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("head "),n("span",{class:"token operator"},"!=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        res`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"push"),n("span",{class:"token punctuation"},"("),s("head"),n("span",{class:"token punctuation"},"."),s("val"),n("span",{class:"token punctuation"},")"),s(`
        head `),n("span",{class:"token operator"},"="),s(" head"),n("span",{class:"token punctuation"},"."),s(`next

    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" res"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"reverse"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),w=n("p",null,"将链表反转以后，然后再将链表一个一个打印出来",-1),x=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[s("   "),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"reversePrint"),n("span",{class:"token punctuation"},"("),s("head"),n("span",{class:"token operator"},":"),s(" ListNode "),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"{"),s(`
       `),n("span",{class:"token comment"},"// 设置一个结果承接"),s(`
       `),n("span",{class:"token comment"},"// 首先先反转这个链表，然会再去打印链表"),s(`
       `),n("span",{class:"token keyword"},"let"),s(" res"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(`
       `),n("span",{class:"token keyword"},"let"),s(" pre "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"null"),s(`
       `),n("span",{class:"token keyword"},"let"),s(" next "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"null"),s(`
       `),n("span",{class:"token keyword"},"let"),s(" cur "),n("span",{class:"token operator"},"="),s(` head
       `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("cur "),n("span",{class:"token operator"},"!=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
           next `),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token punctuation"},"."),s(`next
           cur`),n("span",{class:"token punctuation"},"."),s("next "),n("span",{class:"token operator"},"="),s(` pre
           pre `),n("span",{class:"token operator"},"="),s(` cur
           cur `),n("span",{class:"token operator"},"="),s(` next
       `),n("span",{class:"token punctuation"},"}"),s(`
       `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("pre "),n("span",{class:"token operator"},"!=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
           res`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"push"),n("span",{class:"token punctuation"},"("),s("pre"),n("span",{class:"token punctuation"},"."),s("val"),n("span",{class:"token punctuation"},")"),s(`
           pre `),n("span",{class:"token operator"},"="),s(" pre"),n("span",{class:"token punctuation"},"."),s(`next
       `),n("span",{class:"token punctuation"},"}"),s(`
       `),n("span",{class:"token keyword"},"return"),s(` res
   `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function g(N,C){const c=o("ExternalLinkIcon"),e=o("CodeTabs");return r(),k("div",null,[m,n("p",null,[n("a",b,[s("从尾到头打印这个链表"),a(c)])]),v,h,_,n("ol",null,[n("li",null,[y,a(e,{id:"20",data:[{title:"typescript"}],"tab-id":"code"},{tab0:t(({title:l,value:p,isActive:i})=>[f]),_:1})]),n("li",null,[w,a(e,{id:"30",data:[{title:"typescript"}],"tab-id":"code"},{tab0:t(({title:l,value:p,isActive:i})=>[x]),_:1})])])])}const L=u(d,[["render",g],["__file","offer06.html.vue"]]);export{L as default};

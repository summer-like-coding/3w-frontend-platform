import{_ as c,X as l,Y as p,$ as n,a2 as s,a0 as a,a1 as i,Z as u,E as t}from"./framework-71fc1c0e.js";const r={},k=n("h3",{id:"题目链接",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#题目链接","aria-hidden":"true"},"#"),s(" 题目链接")],-1),d={href:"https://leetcode-cn.com/problems/ping-heng-er-cha-shu-lcof/",target:"_blank",rel:"noopener noreferrer"},m=u('<h3 id="题目描述" tabindex="-1"><a class="header-anchor" href="#题目描述" aria-hidden="true">#</a> 题目描述</h3><p>输入一棵二叉树的根节点，判断该树是不是平衡二叉树。 平衡树的定义如下：</p><blockquote><p>一棵二叉树中，每个节点的左右两个子树的高度差的绝对值不超过 1。</p></blockquote><h3 id="题目思路" tabindex="-1"><a class="header-anchor" href="#题目思路" aria-hidden="true">#</a> 题目思路</h3><p>其实就是使用递归的方式，去判断每一个节点的左右子树的高度差是否大于 1。</p><p>这边其实我们会使用到<code>Offer55-1</code>中的代码，因为我们需要获得每一个节点的高度</p><p>递归三部曲：</p><ol><li>确定递归函数的参数和返回值 <ul><li>参数：根节点</li><li>返回值：是否是平衡二叉树</li></ul></li><li>确定终止条件 <ul><li>当前节点为 <code>null</code>，返回 <code>true</code></li></ul></li><li>确定单层递归的逻辑 <ul><li>获取左右子树的高度</li><li>判断左右子树的高度差是否大于 1</li></ul></li></ol>',8),b=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[s(`
`),n("span",{class:"token comment"},"// 获取树的高度"),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"getDepth"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token operator"},":"),s(" TreeNode "),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"number"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("root "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"max"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"getDepth"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token function"},"getDepth"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// 判断是否平衡"),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"isBalanced"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token operator"},":"),s(" TreeNode "),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"boolean"),s(),n("span",{class:"token punctuation"},"{"),s(`
`),n("span",{class:"token comment"},"//   判断终止条件"),s(`
`),n("span",{class:"token keyword"},"if"),n("span",{class:"token punctuation"},"("),s("root "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token comment"},"// 判断左右子树的高度差是否大于 1"),s(`
`),n("span",{class:"token keyword"},"let"),s(" left "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"getDepth"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"let"),s(" right "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"getDepth"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"if"),n("span",{class:"token punctuation"},"("),s("Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"abs"),n("span",{class:"token punctuation"},"("),s("left "),n("span",{class:"token operator"},"-"),s(" right"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// 继续遍历左右子树"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"isBalanced"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"&&"),s(),n("span",{class:"token function"},"isBalanced"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function h(f,v){const e=t("ExternalLinkIcon"),o=t("CodeTabs");return l(),p("div",null,[k,n("p",null,[n("a",d,[s("平衡二叉树"),a(e)])]),m,a(o,{id:"77",data:[{title:"typescript"}],"tab-id":"code"},{tab0:i(({title:_,value:y,isActive:w})=>[b]),_:1})])}const x=c(r,[["render",h],["__file","offer55-2.html.vue"]]);export{x as default};

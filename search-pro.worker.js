var c=Uint8Array,d=Uint16Array,er=Uint32Array,nr=new c([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),ar=new c([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),pr=new c([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),or=function(r,a){for(var e=new d(31),n=0;n<31;++n)e[n]=a+=1<<r[n-1];for(var t=new er(e[30]),n=1;n<30;++n)for(var f=e[n];f<e[n+1];++f)t[f]=f-e[n]<<5|n;return[e,t]},tr=or(nr,2),ir=tr[0],wr=tr[1];ir[28]=258,wr[258]=28;for(var Cr=or(ar,0),Er=Cr[0],Y=new d(32768),s=0;s<32768;++s){var m=(s&43690)>>>1|(s&21845)<<1;m=(m&52428)>>>2|(m&13107)<<2,m=(m&61680)>>>4|(m&3855)<<4,Y[s]=((m&65280)>>>8|(m&255)<<8)>>>1}for(var k=function(r,a,e){for(var n=r.length,t=0,f=new d(a);t<n;++t)r[t]&&++f[r[t]-1];var v=new d(a);for(t=0;t<a;++t)v[t]=v[t-1]+f[t-1]<<1;var l;if(e){l=new d(1<<a);var i=15-a;for(t=0;t<n;++t)if(r[t])for(var o=t<<4|r[t],u=a-r[t],h=v[r[t]-1]++<<u,g=h|(1<<u)-1;h<=g;++h)l[Y[h]>>>i]=o}else for(l=new d(n),t=0;t<n;++t)r[t]&&(l[t]=Y[v[r[t]-1]++]>>>15-r[t]);return l},$=new c(288),s=0;s<144;++s)$[s]=8;for(var s=144;s<256;++s)$[s]=9;for(var s=256;s<280;++s)$[s]=7;for(var s=280;s<288;++s)$[s]=8;for(var fr=new c(32),s=0;s<32;++s)fr[s]=5;var yr=k($,9,1),mr=k(fr,5,1),q=function(r){for(var a=r[0],e=1;e<r.length;++e)r[e]>a&&(a=r[e]);return a},w=function(r,a,e){var n=a/8|0;return(r[n]|r[n+1]<<8)>>(a&7)&e},H=function(r,a){var e=a/8|0;return(r[e]|r[e+1]<<8|r[e+2]<<16)>>(a&7)},dr=function(r){return(r+7)/8|0},I=function(r,a,e){(a==null||a<0)&&(a=0),(e==null||e>r.length)&&(e=r.length);var n=new(r.BYTES_PER_ELEMENT==2?d:r.BYTES_PER_ELEMENT==4?er:c)(e-a);return n.set(r.subarray(a,e)),n},Fr=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],C=function(r,a,e){var n=new Error(a||Fr[r]);if(n.code=r,Error.captureStackTrace&&Error.captureStackTrace(n,C),!e)throw n;return n},Sr=function(r,a,e){var n=r.length;if(!n||e&&e.f&&!e.l)return a||new c(0);var t=!a||e,f=!e||e.i;e||(e={}),a||(a=new c(n*3));var v=function(Z){var j=a.length;if(Z>j){var rr=new c(Math.max(j*2,Z));rr.set(a),a=rr}},l=e.f||0,i=e.p||0,o=e.b||0,u=e.l,h=e.d,g=e.m,x=e.n,M=n*8;do{if(!u){l=w(r,i,1);var U=w(r,i+1,3);if(i+=3,U)if(U==1)u=yr,h=mr,g=9,x=5;else if(U==2){var _=w(r,i,31)+257,X=w(r,i+10,15)+4,G=_+w(r,i+5,31)+1;i+=14;for(var A=new c(G),N=new c(19),p=0;p<X;++p)N[pr[p]]=w(r,i+p*3,7);i+=X*3;for(var K=q(N),ur=(1<<K)-1,hr=k(N,K,1),p=0;p<G;){var L=hr[w(r,i,ur)];i+=L&15;var E=L>>>4;if(E<16)A[p++]=E;else{var F=0,O=0;for(E==16?(O=3+w(r,i,3),i+=2,F=A[p-1]):E==17?(O=3+w(r,i,7),i+=3):E==18&&(O=11+w(r,i,127),i+=7);O--;)A[p++]=F}}var Q=A.subarray(0,_),y=A.subarray(_);g=q(Q),x=q(y),u=k(Q,g,1),h=k(y,x,1)}else C(1);else{var E=dr(i)+4,z=r[E-4]|r[E-3]<<8,R=E+z;if(R>n){f&&C(0);break}t&&v(o+z),a.set(r.subarray(E,R),o),e.b=o+=z,e.p=i=R*8,e.f=l;continue}if(i>M){f&&C(0);break}}t&&v(o+131072);for(var cr=(1<<g)-1,gr=(1<<x)-1,B=i;;B=i){var F=u[H(r,i)&cr],S=F>>>4;if(i+=F&15,i>M){f&&C(0);break}if(F||C(2),S<256)a[o++]=S;else if(S==256){B=i,u=null;break}else{var V=S-254;if(S>264){var p=S-257,T=nr[p];V=w(r,i,(1<<T)-1)+ir[p],i+=T}var D=h[H(r,i)&gr],P=D>>>4;D||C(3),i+=D&15;var y=Er[P];if(P>3){var T=ar[P];y+=H(r,i)&(1<<T)-1,i+=T}if(i>M){f&&C(0);break}t&&v(o+131072);for(var W=o+V;o<W;o+=4)a[o]=a[o-y],a[o+1]=a[o+1-y],a[o+2]=a[o+2-y],a[o+3]=a[o+3-y];o=W}}e.l=u,e.p=B,e.b=o,e.f=l,u&&(l=1,e.m=g,e.d=h,e.n=x)}while(!l);return o==a.length?a:I(a,0,o)},xr=new c(0),Ar=function(r){((r[0]&15)!=8||r[0]>>>4>7||(r[0]<<8|r[1])%31)&&C(6,"invalid zlib data"),r[1]&32&&C(6,"invalid zlib data: preset dictionaries not supported")};function Tr(r,a){return Sr((Ar(r),r.subarray(2,-4)),a)}var lr=typeof TextEncoder<"u"&&new TextEncoder,J=typeof TextDecoder<"u"&&new TextDecoder;try{J.decode(xr,{stream:!0})}catch{}var kr=function(r){for(var a="",e=0;;){var n=r[e++],t=(n>127)+(n>223)+(n>239);if(e+t>r.length)return[a,I(r,e-1)];t?t==3?(n=((n&15)<<18|(r[e++]&63)<<12|(r[e++]&63)<<6|r[e++]&63)-65536,a+=String.fromCharCode(55296|n>>10,56320|n&1023)):t&1?a+=String.fromCharCode((n&31)<<6|r[e++]&63):a+=String.fromCharCode((n&15)<<12|(r[e++]&63)<<6|r[e++]&63):a+=String.fromCharCode(n)}};function $r(r,a){if(a){for(var e=new c(r.length),n=0;n<r.length;++n)e[n]=r.charCodeAt(n);return e}if(lr)return lr.encode(r);for(var t=r.length,f=new c(r.length+(r.length>>1)),v=0,l=function(u){f[v++]=u},n=0;n<t;++n){if(v+5>f.length){var i=new c(v+8+(t-n<<1));i.set(f),f=i}var o=r.charCodeAt(n);o<128||a?l(o):o<2048?(l(192|o>>6),l(128|o&63)):o>55295&&o<57344?(o=65536+(o&1023<<10)|r.charCodeAt(++n)&1023,l(240|o>>18),l(128|o>>12&63),l(128|o>>6&63),l(128|o&63)):(l(224|o>>12),l(128|o>>6&63),l(128|o&63))}return I(f,0,v)}function Or(r,a){if(a){for(var e="",n=0;n<r.length;n+=16384)e+=String.fromCharCode.apply(null,r.subarray(n,n+16384));return e}else{if(J)return J.decode(r);var t=kr(r),f=t[0],v=t[1];return v.length&&C(8),f}}const vr=Object.entries,br=Object.keys,Mr=r=>{const a=atob(r);return Or(Tr($r(a,!0)))},b=(r,a)=>{const e=r.toLowerCase(),n=a.toLowerCase(),t=[];let f=0,v=0;const l=(o,u=!1)=>{let h="";v===0?h=o.length>20?`… ${o.slice(-20)}`:o:u?h=o.length+v>100?`${o.slice(0,100-v)}… `:o:h=o.length>20?`${o.slice(0,20)} … ${o.slice(-20)}`:o,h&&t.push(h),v+=h.length,u||(t.push(["strong",a]),v+=a.length,v>=100&&t.push(" …"))};let i=e.indexOf(n,f);if(i===-1)return null;for(;i>=0;){const o=i+n.length;if(l(r.slice(f,i)),f=o,v>100)break;i=e.indexOf(n,f)}return v<100&&l(r.slice(f),!0),t},sr=r=>r.reduce((a,{type:e})=>a+(e==="title"?50:e==="heading"?20:e==="custom"?10:1),0),Ur=(r,a)=>{var e;const n={};for(const[t,f]of vr(a)){const v=((e=a[t.replace(/\/[^\\]*$/,"")])==null?void 0:e.title)||"",l=`${v?`${v} > `:""}${f.title}`,i=b(f.title,r);i&&(n[l]=[...n[l]||[],{type:"title",path:t,display:i}]),f.customFields&&vr(f.customFields).forEach(([o,u])=>{u.forEach(h=>{const g=b(h,r);g&&(n[l]=[...n[l]||[],{type:"custom",path:t,index:o,display:g}])})});for(const o of f.contents){const u=b(o.header,r);u&&(n[l]=[...n[l]||[],{type:"heading",path:t+(o.slug?`#${o.slug}`:""),display:u}]);for(const h of o.contents){const g=b(h,r);g&&(n[l]=[...n[l]||[],{type:"content",header:o.header,path:t+(o.slug?`#${o.slug}`:""),display:g}])}}}return br(n).sort((t,f)=>sr(n[t])-sr(n[f])).map(t=>({title:t,contents:n[t]}))},zr=JSON.parse(Mr(""));self.onmessage=({data:r})=>{self.postMessage(Ur(r.query,zr[r.routeLocale]))};
//# sourceMappingURL=minify.js.map
